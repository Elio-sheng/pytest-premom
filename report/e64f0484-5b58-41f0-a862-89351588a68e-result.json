{"name": "用户注册登录查看-预期成功", "status": "broken", "statusDetails": {"message": "TypeError: Object of type ReadFileData is not JSON serializable", "trace": "self = <testcases.user_service_test.test_userservice.TestRegLogList object at 0x104c5a430>\ntestcase_data = {'deviceID': 'decbb1ef-e41c-4cbd-9265-902415f00504', 'email': 'test256@premom.com', 'except_code': 0, 'except_msg': '登录成功', ...}\n\n    @allure.story(\"用例--注册/登录/查看--预期成功\")\n    @allure.description(\"该用例是针对 注册-登录-查看 场景的测试\")\n    @allure.issue(\"\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册登录查看-预期成功\")\n    def test_userservice_login(self, testcase_data):\n        username = testcase_data[\"email\"]\n        password = testcase_data[\"password\"]\n        deviceID = testcase_data[\"deviceID\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n>       result = webUserLogin(username, password, deviceID)\n\ntestcases/user_service_test/test_userservice.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \noperation/userservice.py:23: in webUserLogin\n    res = userservice.webUserLogin(json=json_data, headers=header)\napi/user.py:31: in webUserLogin\n    return self.post(\"/user/web/sign/in\", data, **kwargs)\ncore/rest_client.py:20: in post\n    return self.request(url, \"POST\", data, json, **kwargs)\ncore/rest_client.py:43: in request\n    self.request_log(url, method, data, json, params, headers, files, cookies)\ncore/rest_client.py:81: in request_log\n    logger.info(\"接口请求体 data 参数 ==>> {}\".format(complexjson.dumps(data, indent=4, ensure_ascii=False)))\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py:234: in dumps\n    return cls(\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/encoder.py:201: in encode\n    chunks = list(chunks)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x104c8a3d0>, o = <common.read_data.ReadFileData object at 0x1046f5040>\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type ReadFileData is not JSON serializable\n\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/encoder.py:179: TypeError"}, "description": "该用例是针对 注册-登录-查看 场景的测试", "attachments": [{"name": "log", "source": "167de327-4279-4381-a515-4ee1b52d751a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b1808c3d-06dc-44ad-86af-eb5e909b1f72-attachment.txt", "type": "text/plain"}], "start": 1689837277452, "stop": 1689837277454, "uuid": "6bf3f1d7-04e5-4370-a2ed-25c71d25249e", "historyId": "0283f9d4a052db405d74c5c4c7fca424", "testCaseId": "8427c5788e06b7f399d1191ad4a6d41b", "fullName": "testcases.user_service_test.test_userservice.TestRegLogList#test_userservice_login", "labels": [{"name": "epic", "value": "针对业务场景的测试"}, {"name": "story", "value": "用例--注册/登录/查看--预期成功"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "场景：用户注册-用户登录-查看用户"}, {"name": "parentSuite", "value": "testcases.user_service_test"}, {"name": "suite", "value": "test_userservice"}, {"name": "subSuite", "value": "TestRegLogList"}, {"name": "host", "value": "MBP.local"}, {"name": "thread", "value": "74890-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.user_service_test.test_userservice"}], "links": [{"type": "test_case", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "name": "点击，跳转到对应BUG的链接地址"}]}